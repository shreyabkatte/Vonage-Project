import BaseCommand from '@vonage/cli-utils';
import { OutputFlags } from '@oclif/parser';
import { HTTPMethods, ResponseTypes } from './types';
export default abstract class ConversationsCommand extends BaseCommand {
    protected _token: string;
    protected _baseurl: string;
    protected _userBaseurl: string;
    static flags: OutputFlags<typeof BaseCommand.flags>;
    static args: any[];
    protected _defaultHttpOptions: {
        method: HTTPMethods;
        headers: {};
        responseType: ResponseTypes;
    };
    private _generateJWT;
    init(): Promise<void>;
    getAllConversations(params: any): Promise<import("@vonage/vetch").VetchResponse>;
    createConversation(params: any): Promise<import("@vonage/vetch").VetchResponse>;
    getConversationById(id: any): Promise<import("@vonage/vetch").VetchResponse>;
    updateConversation(params: any): Promise<import("@vonage/vetch").VetchResponse>;
    deleteConversation(id: any): Promise<import("@vonage/vetch").VetchResponse>;
    getAllMembersInConversation(params: any): Promise<import("@vonage/vetch").VetchResponse>;
    getMemberById(params: any): Promise<import("@vonage/vetch").VetchResponse>;
    addMemberToConversation(params: any): Promise<import("@vonage/vetch").VetchResponse>;
    removeMemberFromConversation(params: any): Promise<import("@vonage/vetch").VetchResponse>;
    getConversationsByUser(params: any): Promise<import("@vonage/vetch").VetchResponse>;
}
