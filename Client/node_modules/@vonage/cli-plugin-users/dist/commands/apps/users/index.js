"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const users_base_1 = __importDefault(require("../../../users_base"));
const cli_ux_1 = __importDefault(require("cli-ux"));
class UsersDefault extends users_base_1.default {
    run() {
        return __awaiter(this, void 0, void 0, function* () {
            const flags = this.parsedFlags;
            const args = this.parsedArgs;
            let response = yield this.getAllUsers(flags);
            let userData = response.data._embedded.users;
            cli_ux_1.default.table(userData, {
                id: {},
                name: {}
            }, Object.assign({}, flags));
            this.exit();
        });
    }
}
exports.default = UsersDefault;
UsersDefault.description = "";
UsersDefault.examples = [];
UsersDefault.flags = Object.assign(Object.assign({}, users_base_1.default.flags), { 'page_size': command_1.flags.string({ description: '', hidden: true }), 'order': command_1.flags.string({ description: '', hidden: true }), 'cursor': command_1.flags.string({ description: '', hidden: true }) });
UsersDefault.args = [];
