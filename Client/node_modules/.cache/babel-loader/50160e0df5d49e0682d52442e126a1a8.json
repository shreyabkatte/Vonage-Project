{"ast":null,"code":"var _jsxFileName = \"/home/shreya/Documents/Vonage/Client/src/screens/Verify.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"../components/Form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fields = [{\n  label: \"Enter your 4 digit code\",\n  type: \"number\"\n}];\n\nconst onSubmit = (event, navigate, params, notify) => {\n  event.preventDefault();\n  const request_id = params && params.request_id;\n  const phoneNumber = params && params.request_id;\n  const code = event.target.elements[0].value;\n  console.log(\"request_id is....\", request_id);\n  let method = \"POST\";\n  let headers = {\n    \"Content-Type\": \"application/json\"\n  };\n  const verifyRequest = {\n    method: method,\n    headers: headers,\n    body: JSON.stringify({\n      request_id: \"3d23c30f9cdf4862bd14e5ea9ef8f5a4\",\n      code: code\n    })\n  };\n  fetch(\"http://localhost:3000/check\", verifyRequest).then(res => res.json()).then(res => {\n    if (res.status === \"0\") {\n      console.log(\"verify response is.....\", res); // Send Successfull Message to the user\n\n      const requestBody = {\n        method: method,\n        headers: headers,\n        body: JSON.stringify({\n          virtualNumber: \"33644633627\",\n          toNumber: phoneNumber,\n          message: message\n        })\n      };\n      fetch(\"http://localhost:3000/send\", requestBody).then(res => res.json()).then(res => this.setState({\n        apiResponse: res\n      }));\n      navigate(\"/personal-details\");\n    } else {\n      notify();\n    }\n  });\n};\n\nconst Verify = () => {\n  _s();\n\n  const [flag, setFlag] = useState(false);\n  let navigate = useNavigate();\n  let params = useParams();\n\n  const notify = () => toast.error(\"Incorrect PIN!\", {\n    position: \"bottom-center\",\n    autoClose: 3000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      fields: fields,\n      onSubmit: e => onSubmit(e, navigate, params, notify),\n      buttonLabel: \"Verify Me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Verify, \"3S4rS/D7eHszuqK1rmaq8zKFjA8=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Verify;\nexport default Verify; // class Verify extends React.Component {\n//     onSubmit =(event) =>{\n//         event.preventDefault()\n//         const {request_id} = this.state.registerResponse;\n//         const code = event.target.elements[0].value;\n//         const verifyRequest = {\n//             method: 'POST',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({\n//                 \"request_id\" : request_id,\n//                 \"code\" : code\n//             })\n//         };\n//         fetch('http://localhost:3000/check', verifyRequest)\n//         .then(res => res.json())\n//         .then(res => this.setState({ verifyResponse: res }));\n//     }\n//     render() {\n//         console.log(\"Query is.....\",this.props.location)\n//         return (\n//             <Form  fields={fields} onSubmit={this.onSubmit} buttonLabel={\"Verify Me!\"} linkTo={\"/personal-details\"}/>\n//         )\n//     }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Verify\");","map":{"version":3,"sources":["/home/shreya/Documents/Vonage/Client/src/screens/Verify.js"],"names":["React","useState","Form","useNavigate","useParams","ToastContainer","toast","fields","label","type","onSubmit","event","navigate","params","notify","preventDefault","request_id","phoneNumber","code","target","elements","value","console","log","method","headers","verifyRequest","body","JSON","stringify","fetch","then","res","json","status","requestBody","virtualNumber","toNumber","message","setState","apiResponse","Verify","flag","setFlag","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"../components/Form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst fields = [\n  {\n    label: \"Enter your 4 digit code\",\n    type: \"number\",\n  },\n];\n\nconst onSubmit = (event, navigate, params, notify) => {\n  event.preventDefault();\n  const request_id = params && params.request_id;\n  const phoneNumber = params && params.request_id;\n  const code = event.target.elements[0].value;\n\n  console.log(\"request_id is....\", request_id);\n  let method = \"POST\";\n  let headers = { \"Content-Type\": \"application/json\" };\n\n  const verifyRequest = {\n    method: method,\n    headers: headers,\n    body: JSON.stringify({\n      request_id: \"3d23c30f9cdf4862bd14e5ea9ef8f5a4\",\n      code: code,\n    }),\n  };\n\n  fetch(\"http://localhost:3000/check\", verifyRequest)\n    .then((res) => res.json())\n    .then((res) => {\n      if (res.status === \"0\") {\n        console.log(\"verify response is.....\", res);\n        // Send Successfull Message to the user\n        const requestBody = {\n          method: method,\n          headers: headers,\n          body: JSON.stringify({\n            virtualNumber: \"33644633627\",\n            toNumber: phoneNumber,\n            message: message,\n          }),\n        };\n\n        fetch(\"http://localhost:3000/send\", requestBody)\n          .then((res) => res.json())\n          .then((res) => this.setState({ apiResponse: res }));\n        navigate(\"/personal-details\");\n      } else {\n        notify();\n      }\n    });\n};\n\nconst Verify = () => {\n  const [flag, setFlag] = useState(false);\n  let navigate = useNavigate();\n  let params = useParams();\n  const notify = () =>\n    toast.error(\"Incorrect PIN!\", {\n      position: \"bottom-center\",\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  return (\n    <div>\n      <Form\n        fields={fields}\n        onSubmit={(e) => onSubmit(e, navigate, params, notify)}\n        buttonLabel={\"Verify Me!\"}\n      />\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Verify;\n\n// class Verify extends React.Component {\n\n//     onSubmit =(event) =>{\n//         event.preventDefault()\n//         const {request_id} = this.state.registerResponse;\n//         const code = event.target.elements[0].value;\n\n//         const verifyRequest = {\n//             method: 'POST',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({\n//                 \"request_id\" : request_id,\n//                 \"code\" : code\n//             })\n//         };\n\n//         fetch('http://localhost:3000/check', verifyRequest)\n//         .then(res => res.json())\n//         .then(res => this.setState({ verifyResponse: res }));\n//     }\n\n//     render() {\n//         console.log(\"Query is.....\",this.props.location)\n//         return (\n//             <Form  fields={fields} onSubmit={this.onSubmit} buttonLabel={\"Verify Me!\"} linkTo={\"/personal-details\"}/>\n//         )\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}